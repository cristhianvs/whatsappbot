version: '3.8'

services:
  # Infrastructure Services
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WhatsApp Service (Node.js)
  whatsapp-service:
    build: 
      context: ./services/whatsapp-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
    volumes:
      - ./services/whatsapp-service/sessions:/app/sessions
      - ./services/whatsapp-service/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Classifier Service (Python FastAPI)
  classifier-service:
    build:
      context: ./services/classifier-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4o-mini
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      replicas: 2

  # Ticket Service (Python FastAPI)
  ticket-service:
    build:
      context: ./services/ticket-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - REDIS_URL=redis://redis:6379
      - ZOHO_CLIENT_ID=${ZOHO_CLIENT_ID}
      - ZOHO_CLIENT_SECRET=${ZOHO_CLIENT_SECRET}
      - ZOHO_ORG_ID=${ZOHO_ORG_ID}
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Conversation Service (Python FastAPI)
  conversation-service:
    build:
      context: ./services/conversation-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:

networks:
  default:
    name: whatsapp-bot-network