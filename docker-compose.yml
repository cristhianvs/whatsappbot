version: '3.8'

services:
  # Infrastructure Services
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WhatsApp Service (Node.js)
  whatsapp-service:
    build: 
      context: ./services/whatsapp-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./services/whatsapp-service/.env
    volumes:
      - ./services/whatsapp-service/sessions:/app/sessions
      - ./services/whatsapp-service/logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Classifier Service (Python FastAPI)
  classifier-service:
    build:
      context: ./services/classifier-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
      - "9001:9001"  # Prometheus metrics
    env_file:
      - ./services/classifier-service/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Ticket Service (Python FastAPI)
  ticket-service:
    build:
      context: ./services/ticket-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
      - "9003:9003"  # Prometheus metrics
    env_file:
      - ./services/ticket-service/.env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Remove conversation service for now - not implemented yet

volumes:
  redis_data:

networks:
  default:
    name: whatsapp-bot-network